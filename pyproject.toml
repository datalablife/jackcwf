[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "working"
version = "0.1.0"
description = "Coolify 云开发工作区 - Reflex 全栈应用开发项目"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Jack", email = "jack@example.com"}
]
requires-python = ">=3.12"
keywords = [
    "reflex",
    "fullstack",
    "web development",
    "python",
    "postgresql",
    "coolify"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: Chinese (Simplified)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]

dependencies = [
    # Web Framework & Server
    "reflex==0.8.16",
    "reflex-hosting-cli==0.1.58",
    "starlette==0.48.0",
    "granian==2.5.5",

    # Database & ORM
    "sqlalchemy==2.0.44",
    "sqlmodel==0.0.27",
    "alembic==1.17.0",
    "psycopg2-binary==2.9.11",

    # HTTP & WebSocket
    "httpx==0.28.1",
    "httpcore==1.0.9",
    "python-engineio==4.12.3",
    "python-socketio==5.14.2",
    "simple-websocket==1.1.0",
    "wsproto==1.2.0",

    # Data Validation & Serialization
    "pydantic==2.12.3",
    "pydantic-core==2.41.4",
    "python-multipart==0.0.20",

    # Utilities
    "redis==7.0.1",
    "click==8.3.0",
    "rich==14.2.0",
    "watchfiles==1.1.1",
    "certifi==2025.10.5",

    # Type checking & inspection
    "typing-extensions==4.15.0",
    "typing-inspection==0.4.2",
    "annotated-types==0.7.0",

    # Markdown & Documentation
    "markdown-it-py==4.0.0",
    "mdurl==0.1.2",
    "Pygments==2.19.2",
    "MarkupSafe==3.0.3",

    # Database Migrations
    "Mako==1.3.10",

    # Other dependencies
    "anyio==4.11.0",
    "bidict==0.23.1",
    "greenlet==3.2.4",
    "h11==0.16.0",
    "idna==3.11",
    "packaging==25.0",
    "platformdirs==4.5.0",
    "setuptools==80.9.0",
    "sniffio==1.3.1",
    "wrapt==1.17.3",
    "wheel==0.45.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pylint>=3.0.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/working"
Documentation = "https://coolify.io/docs"
Repository = "https://github.com/yourusername/working"
Issues = "https://github.com/yourusername/working/issues"

# UV 工具配置
[tool.uv]
# 允许预发行版本
managed = true

[tool.uv.pip]
# 预发行版本设置
prerelease = "allow"

# Black 代码格式化配置
[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # 目录
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | node_modules
)/
'''

# isort 导入排序配置
[tool.isort]
profile = "black"
line_length = 100
multi_line_mode = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/migrations/*"]

# mypy 类型检查配置
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_optional = true

# pytest 测试配置
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"

# 覆盖率配置
[tool.coverage.run]
source = ["src"]
omit = [
    "*/__init__.py",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
